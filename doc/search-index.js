var searchIndex = new Map(JSON.parse('[\
["convex_hull_simulation",{"doc":"Convex Hull Simulation","t":"FFSFFFSFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHHCNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNFGPPPFPFFGPPGPGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNFGPSPNNNNNNNNNNHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ColorText","EguiWantsFocus","MAX_ZOOM_OUT","PointData","PointSingle","SimulationTimer","TEXT_SIZE","TextComment","algorithms","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_egui_wants_focus","component_ids","component_ids","create_combo_box","despawn_entities","distributions","downcast","downcast","downcast","downcast","downcast","downcast","eq","from","from","from","from","from","from","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_components","get_components","graphics_drawing","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keyboard_input_system","main","mouse_position_system","pan_cam_system","setup","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ui","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","Algorithm","AlgorithmType","ClearScreen","Clockwise","Colinear","ConvexHull","Counterclockwise","DrawingHistory","Gizmo","HullType","JarvisMarch","KirkPatrickSeidel","LineType","LowerHull","Orientation","PartOfHull","Temporary","TextComment","UpperHull","VerticalLine","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge","clone","clone_into","clone_type_data","component_ids","component_ids","connect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","from","from","from","from","from","from","from","from","from_components","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_components","get_components","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jarvis_march","kirk_patrick_seidel","median_of_medians","orientation","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_hull","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Distribution","DistributionType","Fibonacci","GOLDEN_ANGLE","Random","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","bounded_random","clone","clone_into","clone_type_data","downcast","downcast","eq","fibonacci_circle","from","from","from_sample_","from_sample_","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip"],"q":[[0,"convex_hull_simulation"],[135,"convex_hull_simulation::algorithms"],[317,"convex_hull_simulation::distributions"],[365,"core::any"],[366,"bevy_render::texture::image"],[367,"bevy_render::render_asset"],[368,"bevy_egui"],[369,"bevy_ecs::system::query"],[370,"bevy_ecs::change_detection"],[371,"bevy_ecs::component"],[372,"bevy_ecs::storage"],[373,"bevy_ecs::component"],[374,"egui::ui"],[375,"core::cmp"],[376,"core::marker"],[377,"bevy_ecs::system::commands"],[378,"bevy_ecs::entity"],[379,"bevy_ecs::query::filter"],[380,"bevy_ecs::component"],[381,"bevy_ecs::component"],[382,"bevy_asset::assets"],[383,"bevy_sprite::mesh2d::color_material"],[384,"bevy_time::time"],[385,"bevy_ecs::change_detection"],[386,"bevy_window::window"],[387,"alloc::sync"],[388,"alloc::rc"],[389,"bevy_input::keyboard"],[390,"bevy_input::button_input"],[391,"bevy_egui::systems"],[392,"bevy_input::mouse"],[393,"bevy_transform::components::global_transform"],[394,"bevy_render::camera::camera"],[395,"bevy_pancam"],[396,"core::result"],[397,"core::any"],[398,"glam::f32::vec2"],[399,"bevy_reflect::type_registry"],[400,"alloc::vec"],[401,"core::clone"],[402,"core::cmp"]],"d":["Component to identify the color text.","Resource to store whether egui wants focus or not.","","Resource to contain all data regarding the points.","Component to identify the points. Used by despawn_entities …","The timer for simulation, time step of simulation","","Resource to store the text comment on the screen","Contains the implementation of the algorithms used in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if egui wants focus or not by checking if the …","","","Creates a combo box with the given label and choices.","Despawns all entities with the given component.","Contains the different types of distributions that can be …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Draws the graphics as declared in LineType enum.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Controls the keyboard input for the simulation.","","System to add points to the world by clicking.","Adds controls for pancam system. Namely disables the …","Initial setup function","","","","","","","","","","","","","","","","","","","","","","","","","Draws the UI for the simulation.","","","","","","","","","","","","","Bevy resource that contains the current algorithm being …","Enum representing the implemented algorithms","Clears the screen","Has $\\\\lt 0$ angle between the lines made by the points","Has $\\\\pi$ radian angle between the lines made by the points","Bevy component representing points part of convex hull","Has $\\\\gt 0$ angle between the lines made by the points","Bevy resource that contains all the point history, so that …","Bevy component that represents temporary points","Represents the type of hull being calculated. Used for …","","","Enum representing the different types of draw calls the …","","Represent the orientation between three points …","Represents a line that is part of the convex hull","Temporary lines that show intermediate calculations","Represents a text comment that explains the current step","","Represents a vertical line at a given x coordinate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the two points that forms the bridge of the points","","","","","","Returns the points that form the convex hull","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of the Jarvis March algorithm …","Implementation of the Kirkpatrick Seidel Algorithm","Returns the Median of medians of the input list","Finds the orientation of three points and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the upper hull of input points","","","","","","","","","A resource that stores the current distribution type","The different types of distributions that can be used to …","","Stores the value for Golden Angle. Used by fibonacci_circle…","","","","","","","","","","","","Generates a random point within a circle with a radius of …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,0,55,34,0,0,0,55,44,32,34,69,6,6,55,44,32,34,69,6,55,34,55,44,32,34,69,6,55,34,0,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,0,0,0,0,0,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,55,44,32,34,69,6,0,55,44,32,34,69,6,55,44,32,34,69,6,0,0,61,66,66,0,66,0,0,0,59,59,0,63,0,61,61,61,63,61,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,0,59,59,59,33,35,0,61,66,63,36,33,35,59,54,59,61,66,63,36,33,35,59,54,33,35,61,66,63,36,33,35,59,54,33,35,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,0,0,0,0,59,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,61,66,63,36,33,35,59,54,0,61,66,63,36,33,35,59,54,0,0,68,0,68,68,53,68,53,68,53,68,53,68,53,0,68,68,68,68,53,68,0,68,53,68,53,68,53,68,53,68,53,68,53,68,68,53,68,53,68,53,68,53,68,53,68,53],"f":"`````````{cb{}}00000000000{{c{f{d}}}e{}{}}00000{ce{}{}}00000000000{{{j{h}}{n{l}}}A`}{{AbAdc}A`{{Ah{Af}}}}0{{AjAlc{B`{{An{Alc}}}}}A`{BbBd}}{{Bf{j{Bh{Bj{c}}}}}A`Bl}`444444{{ll}Bn}{cc{}}00000{{ce}g{}{{Ah{c}{{C`{Cb}}}}}{}}0111111{{ce}A`{}{{Ah{CdCb}}}}0{{Bf{n{{Ch{Cf}}}}{n{{Ch{Cj}}}}{Cn{Cl}}{n{D`}}{j{Bh{Bj{Db}}}}{j{Bh{Bj{Dd}}}}{j{Bh{Bj{Df}}}}{n{Dh}}{j{Dj{Bj{Dl}}}}}A`}999999{{{Dn{c}}}{{Dn{b}}}{}}00000{{{E`{c}}}{{E`{b}}}{}}00000{{{Eb{c}}}{{Eb{b}}}{}}00000{{{Cn{{Ef{Ed}}}}{n{Eh}}Ej}A`}{{}A`}{{Bf{n{{Ch{Cf}}}}{n{{Ch{Cj}}}}{n{Eh}}{Cn{{Ef{El}}}}{j{Dj{Bj{Dl}}}}{j{{An{EnF`}}{Bj{F`}}}}{Cn{l}}}A`}{{{Cn{l}}{j{Fb}}}A`}{BfA`}{ce{}{}}00000{c{{Fd{e}}}{}{}}00000000000{cFf{}}00000{{FhBf{n{{Ch{Cf}}}}{n{{Ch{Cj}}}}{n{Eh}}{n{Fj}}{n{D`}}{n{Fl}}{n{Dh}}{j{Bh{Bj{Fn}}}}{j{Bh{Bj{Df}}}}{j{Bh{Bj{Db}}}}{j{Bh{Bj{Dd}}}}}A`}{c{{G`{e}}}{}{}}00000444444````````````````````{cb{}}000000000000000{{c{f{d}}}e{}{}}00000006666666666666666{{{B`{Gb}}Gd}{{An{GbGb}}}}{GfGf}{{ce}A`{}{}}{c{{Dn{Gh}}}{}}{{AbAdc}A`{{Ah{Af}}}}0{{GbGb{B`{Gb}}{Gl{{Gl{Gj}}}}Gn}{{Gl{Gb}}}}<<<<<<<<{{GfGf}Bn}{cc{}}0000000{{ce}g{}{{Ah{c}{{C`{Cb}}}}}{}}011111111{{ce}A`{}{{Ah{CdCb}}}}0{ce{}{}}0000000{{{Dn{c}}}{{Dn{b}}}{}}0000000{{{E`{c}}}{{E`{b}}}{}}0000000{{{Eb{c}}}{{Eb{b}}}{}}0000000{{{Gl{Gb}}{Gl{{Gl{Gj}}}}}{{Gl{Gb}}}}0{{{B`{c}}}c{H`BdHb}}{{GbGbGb}Hd}666666666{c{{Fd{e}}}{}{}}000000000000000{cFf{}}0000000{c{{G`{e}}}{}{}}0000000{{{B`{Gb}}{Gl{{Gl{Gj}}}}Gn}{{Gl{Gb}}}}::::::::`````{cb{}}000{{c{f{d}}}e{}{}}0<<<<{Hf{{An{GdGd}}}}{HhHh}{{ce}A`{}{}}{c{{Dn{Gh}}}{}}{ce{}{}}0{{HhHh}Bn}5{cc{}}00022{{{Dn{c}}}{{Dn{b}}}{}}0{{{E`{c}}}{{E`{b}}}{}}0{{{Eb{c}}}{{Eb{b}}}{}}0555????>>==55","c":[],"p":[[10,"Any",365],[5,"Image",366],[5,"RenderAssets",367],[5,"EguiContext",368],[5,"Query",369],[5,"EguiWantsFocus",0],[5,"ResMut",370],[1,"unit"],[5,"Components",371],[5,"Storages",372],[5,"ComponentId",371],[10,"FnMut",373],[5,"Ui",374],[1,"str"],[1,"tuple"],[1,"slice"],[10,"PartialEq",375],[10,"Copy",376],[5,"Commands",377],[5,"Entity",378],[5,"With",379],[10,"Component",371],[1,"bool"],[17,"Output"],[5,"OwningPtr",380],[6,"StorageType",371],[5,"Mesh",381],[5,"Assets",382],[5,"ColorMaterial",383],[5,"Time",384],[5,"Res",370],[5,"SimulationTimer",0],[5,"Gizmo",135],[5,"ColorText",0],[5,"ConvexHull",135],[5,"DrawingHistory",135],[5,"Window",385],[5,"PrimaryWindow",385],[5,"Box",386],[5,"Arc",387],[5,"Rc",388],[6,"KeyCode",389],[5,"ButtonInput",390],[5,"PointData",0],[5,"InputResources",391],[6,"MouseButton",392],[5,"GlobalTransform",393],[5,"Camera",394],[5,"PanCam",395],[6,"Result",396],[5,"TypeId",365],[5,"EguiContexts",368],[5,"Distribution",317],[5,"Algorithm",135],[5,"PointSingle",0],[6,"Option",397],[5,"Vec2",398],[1,"f32"],[6,"AlgorithmType",135],[10,"TypeData",399],[6,"LineType",135],[5,"Vec",400],[6,"HullType",135],[10,"Clone",401],[10,"PartialOrd",375],[6,"Orientation",135],[1,"usize"],[6,"DistributionType",317],[5,"TextComment",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
